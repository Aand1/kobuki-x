<!--
  Waiterbot global navigation:
  - turtlebot
  - 3d sensor
  - ir half ring
  - virtual sensor (throat-cutting tables)
  - safety controller
  - auto-docking
  - ar marker tracker
  - navigation manager
  - move_base
  - geometric map
  - semantic map
  - amcl localization
  - rviz view (optional)
 -->

<launch>
  <!-- Name of the map to use (without path nor extension) and initial position -->
  <arg name="map_name"       default="edu_room_cropped"/>
  <arg name="initial_pose_x" value="2.0"/>
  <arg name="initial_pose_y" value="2.0"/>
  <arg name="initial_pose_a" value="0.0"/>


  <include file="$(find turtlebot_bringup)/launch/3dsensor.launch">
    <!-- We only need RGB images and pseudo laser scan -->
    <arg name="depth_registration"              value="false"/>
    <arg name="rgb_processing"                  value="true" />
    <arg name="ir_processing"                   value="false"/>
    <arg name="depth_processing"                value="false"/>
    <arg name="depth_registered_processing"     value="false"/>
    <arg name="disparity_processing"            value="false"/>
    <arg name="disparity_registered_processing" value="false"/>
    <arg name="scan_processing"                 value="true" />
  </include>

  <!--  ************** Additional sensors *************  -->
  <!--
  <include file="$(find waiterbot_sensors)/launch/ir_sensors.launch"/>
  -->

  <!-- Reconfigure command velocity multiplexer to fit waiterbot needs. Just set the parameter doesn't work
      if we start the waiterbot rapp with app manager; we must explicitly call the reconfigure service -->
  <node pkg="rosservice" type="rosservice" name="reconfig_vel_mux" args="call --wait /cmd_vel_mux/set_parameters
            '{config:{strs:[[yaml_cfg_file,$(find waiterbot_bringup)/param/vel_multiplexer.yaml]]}}'"/>


  <!--  ********** Alvar AR markers tracker ***********  -->
  <include file="$(find waiterbot_ctrl_cafe)/launch/includes/_ar_tracker.launch">
    <arg name="max_frequency" value="4.0"/>  <!-- This is a CPU-hungry bastard; reduce its rate --> 
  </include>

  <!--  ************* Navigation manager **************  -->
  <include file="$(find waiterbot_ctrl_cafe)/launch/includes/_master_ctrl.launch">
    <arg name="debug_mode" value="true"/>
  </include>

  <!--  ************** Rosnav move base ***************  -->
  <include file="$(find waiterbot_ctrl_cafe)/launch/includes/_move_base.launch"/>
  
  <!--  ******** Kobuki auto-docking controller *******  -->
  <include file="$(find waiterbot_bringup)/launch/includes/_autodock.launch"/>


  <!--  ****** Geometric and semantic map servers *****  -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(find waiterbot_ctrl_cafe)/resources/maps/$(arg map_name).yaml">
    <param name="frame_id" value="/map"/>
  </node>

  <!--  ******************** Amcl *********************  -->
  <include file="$(find waiterbot_ctrl_cafe)/launch/includes/_amcl.launch">
    <arg name="scan_topic" value="scan"/>
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
  </include>
</launch>
